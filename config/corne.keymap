/*
 * Jay's keyboard layout
 *
 * https://zmk.dev/docs/codes/keyboard-keypad
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/*
 * TESTS:
 *   cmd-shift 3    screen capture
 *   cmd-shift 4    screen box capture
 *   hold-cmd tab   app switch
 *   hold-cmd `     window switch
 *   ctrl-c         terminal clear line
 *   shift-down     select line/character
 *   cmd-shift-right  highlight to end of line  ???? TBC
 */


#define AS(keycode) &hm LG(keycode) keycode     // Autoshift Macro

/ {

        behaviors {
            hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping-term-ms = <275>;
		quick-tap-ms = <50>;
		global-quick-tap;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };
            ht_hp: ht_hp_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HT_HP";
                #binding-cells = <2>;
                tapping-term-ms = <250>;
                flavor = "hold-preferred";
                bindings = <&kp>, <&kp>;
            };
            bhm: balanced_homerow_mods {
		compatible = "zmk,behavior-hold-tap";
		label = "thumb_hold";
		#binding-cells = <2>;
		tapping-term-ms = <200>;
		quick-tap-ms = <80>;
		global-quick-tap;
		flavor = "balanced";
		bindings = <&kp>, <&kp>;
            };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
//                               -----------------------------          --------------------------------
//                              |  Q  |  W  |  E  |  R  |  T  |        |  Y  |  U   |  I   |  O  |  P   |
//                              |  A  |  S  |  D  |  F  |  G  |        |  H  |  J   |  K   |  L  | CTRL |
//                              |  Z  |  X  |  C  |  V  |  B  |        |  N  |  M   |  ,   |  .  | BSPC |
//                               -----------------------------          --------------------------------
//                                          |OPT ⌥| LWR | SPC |        | ENT | RSE  | SHFT |
//                                           -----------------          -------------------
                        bindings = <
   &trans       AS(Q)  AS(W)  AS(E)      AS(R)   AS(T)                 AS(Y)    AS(U)   AS(I)      AS(O)     AS(P)                                            &trans
   &trans       AS(A)  AS(S)  AS(D)      AS(F)   AS(G)                 AS(H)    AS(J)   AS(K)      AS(L)     &ht_hp RCTRL ESC                                 &trans
   &trans       AS(Z)  AS(X)  AS(C)      AS(V)   AS(B)                 AS(N)    AS(M)   AS(COMMA)  AS(DOT)   &kp BSPC                                         &trans
                              &kp LALT   &mo 1   &bhm LGUI SPACE       &bhm RGUI RET  &mo 2   &kp RSHFT
                        >;
                };
                lower_layer {
//                                      -----------------------------         ---------------------------------
//                                     |   *  |  7  |  8  |  9  |  + |       |  $  | BT1  | BT2  | BT3  | BTCLR|
//                                     |  ESC |  4  |  5  |  6  |  - |       | SPC |  "  ῾|  '  ᾽|   `  |  ~   |
//                                     |   0  |  1  |  2  |  3  |  = |       |  /  |  ]  `|  ;  ´|  :  ¨| BSPC |
//                                      -----------------------------         ---------------------------------
//                                                  |     |     |    |       |  L4 |   ⌘  |  L5  |
//                                                   ----------------         -------------------
                        bindings = <
   &trans       &kp KP_MULTIPLY AS(N7)  AS(N8)  AS(N9)   &kp PLUS       &kp DLLR    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2  &bt BT_CLR                            &trans
   &trans       &kp ESC         AS(N4)  AS(N5)  AS(N6)   &kp MINUS      &kp SPACE   &kp DQT      &kp SQT      &kp GRAVE     &kp TILDE                             &trans
   &trans       AS(N0)          AS(N1)  AS(N2)  AS(N3)   &kp EQUAL      &kp SLASH   &kp RBKT     &kp SEMI     &kp COLON     &kp BSPC                              &trans
                                        &none   &trans   &none          &none       &kp RGUI     &none
                        >;
                };

                raise_layer {
//                                     -----------------------------       --------------------------------
//                                    |  %  |  @  |  #  |  $  |     |     |  ^  |  &   | TAB |  `   | F15  |
//                                    |  <  |  { ι|  (  |  [ ῀|  _  |     |  –  | LFT  | DWN |  UP  | RGT  |
//                                    |  >  |  } `|  )  |  ] `|SHFT |     |  \  |  |   |  ?  |  !   | BSPC |
//                                     -----------------------------       --------------------------------
//                                                |OPT ⌥|  ⌘  |     |     |     |      |     |
//                                                 -----------------       ------------------
                        bindings = <
   &trans     &kp PRCNT   &kp AT      &kp HASH    &kp DLLR    &none             &kp CARET     &kp AMPS   &kp TAB      &kp GRAVE  &kp F15                &trans
   &trans     &kp LT      &kp LBRC    &kp LPAR    &kp LBKT    &kp UNDER         &kp RA(MINUS) &kp LEFT   &kp DOWN     &kp UP     &kp RIGHT              &trans
   &trans     &kp GT      &kp RBRC    &kp RPAR    &kp RBKT    &kp LSHFT         &kp BSLH      &kp PIPE   &kp QMARK    &kp EXCL   &kp BSPC               &trans
                                      &kp LALT    &kp LGUI    &none             &none         &none      &none
                        >;
                };
        };
};
